{{- if .Values.server.cronjob.backup.enabled }}
{{- if .Capabilities.APIVersions.Has "batch/v1/CronJob" -}}
apiVersion: batch/v1
{{- else }}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: {{ template "psono.server.fullname" . }}-backup
  labels:
    {{- include "psono.server.labels" . | nindent 4 }}
  annotations:
{{ toYaml .Values.server.cronjob.backup.annotations | indent 4 }}
spec:
  schedule: {{ .Values.server.cronjob.backup.schedule | quote }}
  concurrencyPolicy: Forbid
  {{- with .Values.server.cronjob.backup.failedJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ . }}
  {{- end }}
  {{- with .Values.server.cronjob.backup.successfulJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ . }}
  {{- end }}
  jobTemplate:
    metadata:
      labels:
        {{- include "psono.server.labels" . | nindent 8 }}
    spec:
      backoffLimit: 2
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ include "psono.name" . }}
            app.kubernetes.io/managed-by: {{ .Release.Service }}
        spec:
          serviceAccountName: {{ template "psono.serviceAccountName.server" . }}
          volumes:
            - name: server-config
              secret:
                secretName: {{ include "psono.server.fullname" . }}
            {{- if .Values.fileserver.enabled }}
            - name: fileserver-config
              secret:
                secretName: {{ include "psono.fileserver.fullname" . }}
            {{- end }}
            - name: gobackup-workdir
              emptyDir: {}
            - name: gobackup-config
              configMap:
                name: {{ include "psono.server.fullname" . }}-backup-config
          restartPolicy: Never
          containers:
            - name: {{ .Chart.Name }}
              image: "{{ .Values.server.cronjob.backup.image.repository }}:{{ .Values.server.cronjob.backup.image.tag }}"
              imagePullPolicy: {{ .Values.server.cronjob.backup.image.pullPolicy }}
              volumeMounts:
                - name: server-config
                  mountPath: /config/server-settings.yaml
                  subPath: settings.yaml
                {{- if .Values.fileserver.enabled }}
                - name: fileserver-config
                  mountPath: /config/fileserver-settings.yaml
                  subPath: settings.yaml
                {{- end }}
                - name: gobackup-config
                  mountPath: /etc/gobackup/config-raw.yaml
                  subPath: gobackup.yaml
                - name: gobackup-workdir
                  mountPath: {{ .Values.server.cronjob.backup.workdir }}
              env:
                - name: DB_USER
                  valueFrom:
                    secretKeyRef:
                      key: dbUser
                      name: {{ include "psono.server.fullname" . }}
                - name: DB_PASS
                  valueFrom:
                    secretKeyRef:
                      key: dbPass
                      name: {{ include "psono.server.fullname" . }}
                - name: SECRET_ACCESS_KEY
                  value: {{ .Values.server.cronjob.backup.bucket.secretKey }}
                {{- if .Values.server.cronjob.backup.encryption }}
                - name: PASSPHRASE
                  value: {{ .Values.server.cronjob.backup.passphrase }}
                {{- end }}
              resources:
{{ toYaml .Values.server.cronjob.backup.resources | indent 16 }}
    {{- with .Values.server.cronjob.backup.nodeSelector }}
          nodeSelector:
{{ toYaml . | indent 12 }}
    {{- end }}
    {{- with .Values.server.cronjob.backup.affinity }}
          affinity:
{{ toYaml . | indent 12 }}
    {{- end }}
    {{- with .Values.server.cronjob.backup.tolerations }}
          tolerations:
{{ toYaml . | indent 12 }}:
    {{- end }}
{{- end }}